<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-tw" lang="zh-tw" dir="ltr">
<head>
	  <xbasehref="http://ez2learn.com/index.php/python-tutorials/python-basic-tutorials/159-python" />
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="noindex, nofollow" />
  <meta name="keywords" content="Python, 程式設計, 教學, 程式設計教學, c語言, C++, c++語言, TurboGears, Twisted" />
  <meta name="title" content="Python的內建文件" />
  <meta name="author" content="Victor" />
  <meta name="description" content="Victor的 易記學 程式設計教學，包含Python、C/C++語言、TurboGears等教學，以及以承接Python為主的程式設計外包" />
  <meta name="generator" content="Joomla! 1.5 - Open Source Content Management" />
  <title>Python的內建文件</title>
  <link href="/templates/themza_j15_11/favicon.ico" rel="shortcut icon" type="image/x-icon" />
  <script type="text/javascript" src="../../../media/system/js/mootools.js" tppabs="http://ez2learn.com/media/system/js/mootools.js"></script>
  <script type="text/javascript" src="../../../media/system/js/caption.js" tppabs="http://ez2learn.com/media/system/js/caption.js"></script>
  <script type="text/javascript" language="javascript">
var J_BasePath = '/';
</script>
<link type="text/css" rel="stylesheet" href="../../../plugins/content/joomler_syntaxhighlighter/Styles/SyntaxHighlighter.css" tppabs="http://ez2learn.com/plugins/content/joomler_syntaxhighlighter//Styles/SyntaxHighlighter.css"></link>
<script type="text/javascript" language="javascript" src="../../../plugins/content/joomler_syntaxhighlighter/Scripts/shCore.js" tppabs="http://ez2learn.com/plugins/content/joomler_syntaxhighlighter/Scripts/shCore.js"></script>
<script type="text/javascript" language="javascript" src="../../../plugins/content/joomler_syntaxhighlighter/J_dpCall.js" tppabs="http://ez2learn.com/plugins/content/joomler_syntaxhighlighter/J_dpCall.js"></script>
  <script type="text/javascript" language="javascript" src="../../../plugins/content/joomler_syntaxhighlighter/Scripts/shBrushPython.js" tppabs="http://ez2learn.com/plugins/content/joomler_syntaxhighlighter/Scripts/shBrushPython.js"></script>

	<link rel="stylesheet" href="../../../templates/themza_j15_11/css/template.css" tppabs="http://ez2learn.com/templates/themza_j15_11/css/template.css" type="text/css" />

</head>
<body class="contentpane">
	
	<table class="contentpaneopen">
<tr>
		<td class="contentheading" width="100%">
					Python的內建文件			</td>
				<td align="right" width="100%" class="buttonheading">
		<a href="#" onclick="window.print();return false;"><img src="../../../images/M_images/printButton.png" tppabs="http://ez2learn.com/images/M_images/printButton.png" alt="列印"  /></a>		</td>
	</tr>
</table>

<table class="contentpaneopen">
<tr>
	<td valign="top">
		<span class="small">
			作者是 Victor		</span>
		&nbsp;&nbsp;
	</td>
</tr>

<tr>
	<td valign="top" class="createdate">
		週三, 11 二月 2009 21:09	</td>
</tr>


<tr>
<td valign="top">
<h2>Python的內建文件</h2>

<p>
有別於其它語言，Python有個特別的地方，就是它有一種內建文件在程式裡的格式，基本上標準的程式庫都會按照這樣的格式去寫，因此所有Python的module幾乎都可以在它的程式碼裡找到相關的文件，使用方式等等，我們在這裡介紹如何找到這些文件。</p>

<p>首先我們先看看這些文件在Python的標準程式庫的程式碼中長什麼樣子 :</p>

<pre name="code" class="python:nogutter:nocontrols">
"""Open an arbitrary URL.

See the following document for more info on URLs:
"Names and Addresses, URIs, URLs, URNs, URCs", at
http://www.w3.org/pub/WWW/Addressing/Overview.html

See also the HTTP spec (from which the error codes are derived):
"HTTP - Hypertext Transfer Protocol", at
http://www.w3.org/pub/WWW/Protocols/

Related standards and specs:
- RFC1808: the "relative URL" spec. (authoritative status)
- RFC1738 - the "URL standard". (authoritative status)
- RFC1630 - the "URI spec". (informational status)

The object returned by URLopener().open(file) will differ per
protocol.  All you know is that is has methods read(), readline(),
readlines(), fileno(), close() and info().  The read*(), fileno()
and close() methods work like those of open files.
The info() method returns a mimetools.Message object which can be
used to query various info about the object, if available.
(mimetools.Message objects are queried with the getheader() method.)
"""

import string
import socket
import os
import time
import sys
from urlparse import urljoin as basejoin

__all__ = ["urlopen", "URLopener", "FancyURLopener", "urlretrieve",
           "urlcleanup", "quote", "quote_plus", "unquote", "unquote_plus",
           "urlencode", "url2pathname", "pathname2url", "splittag",
           "localhost", "thishost", "ftperrors", "basejoin", "unwrap",
           "splittype", "splithost", "splituser", "splitpasswd", "splitport",
           "splitnport", "splitquery", "splitattr", "splitvalue",
           "splitgophertype", "getproxies"]

__version__ = '1.17'    # XXX This version is not always updated :-(

MAXFTPCACHE = 10        # Trim the ftp cache beyond this size

# Helper for non-unix systems
if os.name == 'mac':
    from macurl2path import url2pathname, pathname2url
elif os.name == 'nt':
    from nturl2path import url2pathname, pathname2url
elif os.name == 'riscos':
    from rourl2path import url2pathname, pathname2url
else:
    def url2pathname(pathname):
        """OS-specific conversion from a relative URL of the 'file' scheme
        to a file system path; not recommended for general use."""
        return unquote(pathname)

    def pathname2url('/pathname'):
        """OS-specific conversion from a file system path to a relative URL
        of the 'file' scheme; not recommended for general use."""
        return quote(pathname)

# 以下省略
</pre>

<p>這是
urllib.py這個標準函式庫裡的一個module，是用來抓取網頁用的module，我們只列出前面的一部份來看，發現在檔案開頭就有一大段的文件，用我們之前介紹的註解方式包起來，而某些函數的def
xxx():下來一行也有這樣的說明，其實這樣的註解，Python有一定的格式可以遵守，然後就可以有專門的程式來分析這樣的py程式檔案，把文件抓出來並整理，是非常方便的一個功能，文件寫在程式碼裡一方面可以當註解，一方面又可以被程式分析成另外的文件檔，一舉兩得，現在我們就來介紹如何用
Python內建的工具幫我們找到我們想要的說明文件。</p>

<h2>help函數</h2>

<p>
python有個好用的函數叫做help，這個函數會把傳進去的物件的內建文件抓出來並顯示出來，我們下面示範一個簡單的程式，來抓出我們想要的文件。</p>

<pre name="code" class="python:nogutter:nocontrols">
# 引進urllib這個module，我們才能使用
import urllib

# 印出urllib的文件
help(urllib)
</pre>

<p>
就是這麼簡單，其實不止是module，任何你想要知道它文件的"物件"，你都可以把它丟進help，只要裡面有照格式寫文件，就都會被抓出來然後列印出來，下面我們介紹印出各種物件的文件程式碼。</p>

<pre name="code" class="python:nogutter:nocontrols">
# 是的，因為help也是一個物件函數
# 所以我們能夠把它丟進去
# 看help這個東西的文件
help(help)

# 看str的文件
help(str)

# 看str的split的文件
help(str.split)

# 看int的文件
help(int)
</pre>

<p>
有這樣的文件說明，遇到任何不懂或忘記怎樣使用的物件，都可以使用這種方式來查詢，當然，我們之前有教交談式的介面，像這種交談式的指令就非常好用，要查什麼就像在下指令一樣，不用特地開一個Python檔然後寫這樣的程式，下面畫面我們示範用交談式指令查文件。</p>

<p><img class="image-inline image-inline" src="../../../images/stories/python-tutorial/basic-tutorial/5.jpg" tppabs="http://ez2learn.com/images/stories/python-tutorial/basic-tutorial/5.jpg" alt="內建文件 - 範例" /></p>

<h2>內建文件的瀏覽</h2>

<p>
除了help指令之外，Python在安裝完之後，就有內建一個相當方便的小程式，可以讓你用瀏覽器看目前已安裝的所有module的文件，這個小程式的捷徑放在程式集安裝的Python
2.x的資料夾裡，叫做Module Docs，現在就讓我們來示範怎樣使用這個來找文件。</p>

<p>在執行了Module Docs這個程式後的畫面 :</p>

<img class="image-inline" src="../../../images/stories/python-tutorial/basic-tutorial/6.jpg" tppabs="http://ez2learn.com/images/stories/python-tutorial/basic-tutorial/6.jpg" alt="內建文件 - 模組瀏覽器" />  

<p>接下來只要按Open
browser，它就會幫你開啟瀏覽器來到瀏覽文件的頁面，當不使用時只要將此程式關閉就可以了，文件的頁面長得像這樣。</p>

<img class="image-inline image-inline" src="../../../images/stories/python-tutorial/basic-tutorial/7.jpg" tppabs="http://ez2learn.com/images/stories/python-tutorial/basic-tutorial/7.jpg" alt="內建文件 - 模組瀏覽器頁面" />        

<p>
到了這裡，你就能選你要的module進入看內建的文件，例如你想看md5，就找到md5的連結，看md5的相關文件，也許你可能有疑問，就是這樣的文件和官方網站上的文件差在哪裡?
答案就差在於，這裡的文件，是即時從你現有已安裝的module或標準的module裡抓出來的文件，也就是說，就算是第三方甚至是你自己寫的
module，只要有寫內建文件，都可以被這個程式抓出來並整理成網頁，而官方網站的文件就只有標準程式庫的文件而已，這裡就是差別的地方。</p>
			<table align="center" class="pagenav">
			<tr>
				<th class="pagenav_prev">
					<a href="158-python.htm" tppabs="http://ez2learn.com/index.php/python-tutorials/python-basic-tutorials/158-python">&lt; 前一個</a>
				</th>
				<td width="50">
					&nbsp;
				</td>
				<th class="pagenav_next">
					<a href="160-python.htm" tppabs="http://ez2learn.com/index.php/python-tutorials/python-basic-tutorials/160-python">下一個 &gt;</a>
				</th>
			</tr>
			</table></td>
</tr>

</table>
<span class="article_separator">&nbsp;</span>

</body>
</html>
