== 介绍 ==


Python 的标准库包括了很多的模块, 从 Python 语言自身特定的类型和声明, 到一些只用于少数程序的不著名的模块. 

本章描述了一些基本的标准库模块. 任何大型 Python 程序都有可能直接或间接地使用到这类模块的大部分. 

=== 内建函数和异常 === 

下面的这两个模块比其他模块加在一起还要重要: 定义内建函数(例如 len, int, range ...)的 
``_ _builtin_ _`` 模块, 以及定义所有内建异常的 ``exceptions`` 模块. 

Python 在启动时导入这两个模块, 使任何程序都能够使用它们. 

=== 操作系统接口模块 ===

Python 有许多使用了 POSIX 标准 API 和标准 C 语言库的模块. 它们为底层操作系统提供了平台独立的接口. 

这类的模块包括: 提供文件和进程处理功能的 ``os`` 模块; 提供平台独立的文件名处理
(分拆目录名, 文件名, 后缀等)的 ``os.path`` 模块; 以及时间日期处理相关的 ``time/datetime`` 模块. 

``` [!Feather注: datetime 为 Py2.3 新增模块, 提供增强的时间处理方法 ]

延伸一点说, 网络和线程模块同样也可以归为这一个类型. 不过 Python 并没有在所有的平台/版本实现这些. 

=== 类型支持模块 ===

标准库里有许多用于支持内建类型操作的库. ``string`` 模块实现了常用的字符串处理. 
``math`` 模块提供了数学计算操作和常量(pi, e都属于这类常量), ``cmath`` 模块为复数提供了和 
``math`` 一样的功能. 

=== 正则表达式 ===

``re`` 模块为 Python 提供了正则表达式支持. 正则表达式是用于匹配字符串或特定子字符串的
有特定语法的字符串模式. 

=== 语言支持模块 ===

sys 模块可以让你访问解释器相关参数,比如模块搜索路径,解释器版本号等. 
``operator`` 模块提供了和内建操作符作用相同的函数. ``copy`` 模块允许
你复制对象, Python 2.0 新加入的 ``gc`` 模块提供了对垃圾收集的相关控制功能. 