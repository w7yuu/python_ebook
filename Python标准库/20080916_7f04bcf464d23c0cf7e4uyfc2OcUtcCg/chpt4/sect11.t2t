==base64 模块==


``base64`` 编码体系用于将任意二进制数据转换为纯文本. 它将一个 3 字节的二进制字节组
转换为 4 个文本字符组储存, 而且规定只允许以下集合中的字符出现:

```
ABCDEFGHIJKLMNOPQRSTUVWXYZ
abcdefghijklmnopqrstuvwxyz
0123456789+/
```

另外, ``=`` 用于填充数据流的末尾.

[Example 4-18 #eg-4-18] 展示了如何使用 ``encode`` 和 ``decode`` 函数操作文件对象.

====Example 4-18. 使用 base64 模块编码文件====[eg-4-18]

```
File: base64-example-1.py

import base64

MESSAGE = "life of brian"

file = open("out.txt", "w")
file.write(MESSAGE)
file.close()

base64.encode(open("out.txt"), open("out.b64", "w"))
base64.decode(open("out.b64"), open("out.txt", "w"))

print "original:", repr(MESSAGE)
print "encoded message:", repr(open("out.b64").read())
print "decoded message:", repr(open("out.txt").read())

original:  'life of brian'
encoded message: 'bGlmZSBvZiBicmlhbg==\012'
decoded message: 'life of brian'
```

[Example 4-19 #eg-4-19] 展示了如何使用 ``encodestring`` 和 ``decodestring`` 函数在字符串间转换. 
它们是 ``encode`` 和 ``decode`` 函数的顶层封装. 使用 ``StringIO`` 对象处理输入和输出.

====Example 4-19. 使用 base64 模块编码字符串====[eg-4-19]

```
File: base64-example-2.py

import base64

MESSAGE = "life of brian"

data = base64.encodestring(MESSAGE)

original_data = base64.decodestring(data)

print "original:", repr(MESSAGE)
print "encoded data:", repr(data)
print "decoded data:", repr(original_data)

*B*original: 'life of brian'
encoded data: 'bGlmZSBvZiBicmlhbg==\012'
decoded data: 'life of brian'*b*
```

[Example 4-20 #eg-4-20] 展示了如何将用户名和密码转换为 HTTP 基本身份验证字符串. 

====Example 4-20. 使用 base64 模块做基本验证====[eg-4-20]

```
File: base64-example-3.py

import base64

def getbasic(user, password):
    # basic authentication (according to HTTP)
    return base64.encodestring(user + ":" + password)    

print getbasic("Aladdin", "open sesame")

'QWxhZGRpbjpvcGVuIHNlc2FtZQ=='
```

最后, [Example 4-21 #eg-4-21] 展示了一个实用小工具, 它可以把 GIF 格式转换为 Python 脚本, 
便于使用 Tkinter 库.

====Example 4-21. 使用 base64 为 Tkinter 封装 GIF 格式====[eg-4-21]

```
File: base64-example-4.py

import base64, sys

if not sys.argv[1:]:
    print "Usage: gif2tk.py giffile >pyfile"
    sys.exit(1)

data = open(sys.argv[1], "rb").read()

if data[:4] != "GIF8":
    print sys.argv[1], "is not a GIF file"
    sys.exit(1)

print '# generated from', sys.argv[1], 'by gif2tk.py'
print
print 'from Tkinter import PhotoImage' 
print
print 'image = PhotoImage(data="""'
print base64.encodestring(data),
print '""")'

*B*# generated from samples/sample.gif by gif2tk.py

from Tkinter import PhotoImage

image = PhotoImage(data="""
R0lGODlhoAB4APcAAAAAAIAAAACAAICAAAAAgIAAgACAgICAgAQEBIwEBIyMBJRUlISE/LRUBAQE
...
AjmQBFmQBnmQCJmQCrmQDNmQDvmQEBmREnkRAQEAOw==
""")*b*
```
